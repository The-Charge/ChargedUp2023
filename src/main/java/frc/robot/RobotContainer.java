// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: RobotContainer.

package frc.robot;

import frc.robot.commands.*;
import frc.robot.subsystems.*;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj2.command.button.JoystickButton;
import edu.wpi.first.wpilibj.Joystick;
public class RobotContainer {

    private static RobotContainer m_robotContainer = new RobotContainer();

    public final MagicArm m_arm = new MagicArm();

    public final Claw m_claw = new Claw();

    // Joysticks
    private final Joystick buttonBox = new Joystick(2);
    private final Joystick rightJoystick = new Joystick(1);
    private final Joystick leftJoystick = new Joystick(0);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // A chooser for autonomous commands
    SendableChooser<Command> m_chooser = new SendableChooser<>();

    /**
     * The container for the robot. Contains subsystems, OI devices, and commands.
     */
    RobotContainer() {
        //configureButtonBindings();
        //m_drivetrain.setDefaultCommand(new TankDrive( m_drivetrain ) );
        //m_claw.setDefaultCommand(new RunClaw(m_claw));
        m_arm.setDefaultCommand(new MoveArmSimple(m_arm));
        m_claw.setDefaultCommand(new ClawSafety(m_claw, m_arm));
        JoystickButton middleButton = new JoystickButton(rightJoystick,2);
        middleButton.onTrue((new MoveArmToNeutral(m_arm)).withInterruptBehavior(Command.InterruptionBehavior.kCancelSelf));
        JoystickButton frontLowButton = new JoystickButton(rightJoystick,3);
        frontLowButton.onTrue((new MoveMagicArmToXY(m_arm, 1.0,0.1)).withInterruptBehavior(Command.InterruptionBehavior.kCancelSelf)); 
        JoystickButton frontHighButton = new JoystickButton(rightJoystick,5);
        frontHighButton.onTrue((new MoveMagicArmToXY(m_arm, 1.2,1)).withInterruptBehavior(Command.InterruptionBehavior.kCancelSelf)); 
        JoystickButton backLowButton = new JoystickButton(rightJoystick,4);
        backLowButton.onTrue((new MoveMagicArmToXY(m_arm, -1.0,0.1)).withInterruptBehavior(Command.InterruptionBehavior.kCancelSelf)); 
        JoystickButton backHighButton = new JoystickButton(rightJoystick,6);
        backHighButton.onTrue((new MoveMagicArmToXY(m_arm, -1.2,1)).withInterruptBehavior(Command.InterruptionBehavior.kCancelSelf)); 
        SmartDashboard.putData("AutoSelect", m_chooser);


        JoystickButton openClawBtn = new JoystickButton(leftJoystick, 11);
        openClawBtn.onTrue(new OpenClaw(m_claw));

        JoystickButton closeClawBtn = new JoystickButton(leftJoystick, 12);
        closeClawBtn.onTrue(new CloseClaw(m_claw));
    }

    public static RobotContainer getInstance() {
        return m_robotContainer;
    }

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getleftJoystick() {
        return leftJoystick;
    }

    public Joystick getrightJoystick() {
        return rightJoystick;
    }

    public Joystick getbuttonBox() {
        return buttonBox;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

    /**
     * Use this to pass the autonomous command to the main {@link Robot} class.
     *
     * @return the command to run in autonomous
     */
    public Command getAutonomousCommand() {
        // The selected command will be run in autonomous
        return m_chooser.getSelected();
    }

}